---

- name: Disable Proxmox subscription popup
  ansible.builtin.replace:
    path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
    regexp: '^(.*)Ext\\.Msg\\.show\$$\\{(.*)$\\n^(.*)No valid subscription(.*)$'
    replace: '\\1void({\\2\\n\\3No valid subscription\\4'
  tags: [provision-proxmox-community]

- name: Modify sources.list to use pve-no-subscription repository (Proxmox 8.*)
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list
    regexp: '^deb http://download.proxmox.com/debian/pve .*$'
    line: 'deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription'
    state: present
  notify: Update apt cache
  tags: [provision-proxmox-community]

- name: Remove pve-enterprise repository if exists
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list
    regexp: '^deb http://enterprise.proxmox.com/debian/pve .*$'
    state: absent
  notify: Update apt cache
  tags: [provision-proxmox-community]

- name: Update apt cache
  become: yes
  ansible.builtin.apt:
    update_cache: yes
  tags: [provision-proxmox-community]

- name: Perform a dist-upgrade
  become: yes
  ansible.builtin.apt:
    upgrade: dist
    update_cache: yes
    cache_valid_time: 3600
  tags: [provision-proxmox-community]

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
    get_checksum: no
  register: reboot_required_file
  tags: [provision-proxmox-community]

- name: Reboot the server if required
  ansible.builtin.reboot:
  when: reboot_required_file.stat.exists == true
  tags: [provision-proxmox-community]

- name: Remove not required dependencies
  become: yes
  ansible.builtin.apt:
    autoremove: yes
  tags: [provision-proxmox-community]
