---
# tasks file for hf_provision_docker

#- name: Print Module Variables ("vars")
#  debug:
#    msg: "{{ vars }}"

#- name: Print Module Variables ("environment")
#  debug:
#    msg: "{{ environment }}"

#- name: Print Module Variables ("group_names")
#  debug:
#    msg: "{{ group_names }}"

#- name: Print Module Variables ("groups")
#  debug:
#    msg: "{{ groups }}"

#- name: Print Module Variables ("hostvars")
#  debug:
#    msg: "{{ hostvars }}"

#- local_action: copy content={{vars}} dest=./var-vars.log
#- local_action: copy content={{environment}} dest=./var-environment.log
#- local_action: copy content={{group_names}} dest=./var-group_names.log
#- local_action: copy content={{groups}} dest=./var-groups.log
#- local_action: copy content={{hostvars}} dest=./var-hostvars.log

## Variables setup
#- name: Include os-specific variables.
#  include_vars: "../vars/{{ ansible_distribution }}.yml"
#
#- debug:
#    var: docker_repo_ce_stable

- name: Print Module Variables ("_the_vars, pip_package")
  debug:
    msg: "{{ _the_vars, pip_package }}"


## Variables setup
#- name: Include defaults variables.
#  include_vars: "../defaults/main.yml"
#
#- debug:
#    var: docker_repo

#- name: Install apt-transport-https and gnupg if necessary.
#  become: true
#  apt:
#    name:
#      - apt-transport-https
#      - gnupg
#    state: present
#
#- name: Import Docker APT public key.
#  become: true
#  apt_key:
#    url: "{{ docker_repo['gpg_key'] }}"
#    id: "{{ docker_repo['gpg_key_id'] | default('') }}"
#    state: present
#
#- name: Add the Docker APT repository.
#  become: yes
#  apt_repository:
#    repo: "{{ docker_repo['apt_repo'] }}"
#    filename: "{{ docker_repo['name'] }}"
#    state: present


###
# provision-01-docker playbook
##
# Install Docker, Python, pip and pip packages required by Ansible
##

## - hosts : docker
#- name: Install Docker, Python, pip and pip packages required by Ansible
#  become: True
#  roles:
#    - role: geerlingguy.pip
#      vars:
#        pip_install_packages:
#        - name: jsondiff # needed by Ansible docker_stack module
#        - name: pyyaml   # needed by Ansible docker_stack module
#        - name: docker
#        # - name: docker-py # We do not use docker-py because it does not handle "docker config" correctly
#
#    - role: geerlingguy.docker
#      vars:
#        docker_package_state: present
#        docker_install_compose: False
#
#  post_tasks:
#    - name: Ensure current user is added to the docker group
#      user:
#        name: "{{ ansible_user }}"
#        groups: docker
#        append: yes
#      register: user_status
#      when: "'test' not in group_names"
#
## - hosts : docker:!localhost
#- name: Reset connection so the new docker group is taken into account
#  tasks:
#    - name: Reload current user groups
#      meta: reset_connection # reset connection so the new docker group is taken into account. Not available for localhost :(
